workspace "terminal"
workspace "browser"
workspace "discord"

prefer-no-csd
screenshot-path null

spawn-at-startup "ghostty" "--initial-window=false"

input {
    keyboard {
        xkb {
            layout "br"
            options "caps:escape"
        }

        numlock
    }

    disable-power-key-handling
    focus-follows-mouse
    workspace-auto-back-and-forth
}

output "eDP-1" {
    mode "1920x1080"
    position x=0 y=0
    focus-at-startup
}

output "HDMI-A-1" {
    mode "1920x1080"
    position x=0 y=-1080
}

layout {
    gaps 4

    // TODO: test different behaviors
    center-focused-column "on-overflow"
    always-center-single-column
    default-column-display "tabbed"
    background-color "transparent"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        fixed 1912
    }

    default-column-width { proportion 1.0; }

    focus-ring {
        width 1
        active-color "#cdd6f4"
        inactive-color "#11111b"
    }

    border {
        off
    }

    tab-indicator {
        hide-when-single-tab
        place-within-column
    }

    struts {
        left 0
        right 0
        top -4
        bottom 0
    }
}

window-rule {
    match title="Notifications" app-id=r#"^com\.mitchellh\.ghostty$"#
    match title="File Upload" app-id=r#"^xdg-desktop-portal-gtk$"#
    open-floating true
}

window-rule {
    match title="Volume Control" app-id=r#"^org\.pulseaudio\.pavucontrol"#
    default-column-width { fixed 900; }
    default-window-height { fixed 525; }
    open-floating true
}

window-rule {
    match title="Bitwarden" app-id=r#"^com\.mitchellh\.ghostty$"#
    open-floating true
    block-out-from "screen-capture"
}

window-rule {
    match app-id="mpv"
    open-on-output "HDMI-A-1"
}

window-rule {
    geometry-corner-radius 10
    clip-to-geometry true
}

layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

layer-rule {
    match namespace="^notifications$"
    block-out-from "screen-capture"
}

binds {
    // General use binds
        Mod+Shift+Slash  repeat=false { show-hotkey-overlay; }
        Mod+T            repeat=false { spawn "ghostty"; }
        Mod+F            repeat=false { spawn "app.zen_browser.zen"; }
        Mod+D            repeat=false { spawn "dev.vencord.Vesktop"; }
        Mod+Space        repeat=false { spawn "anyrun"; }
        Mod+Delete       repeat=false { spawn "powermenu"; }
        Mod+Shift+Delete repeat=false { quit; }
        Mod+Q            repeat=false { close-window; }

    // Screencapture
        Mod+F12       repeat=false { screenshot; }
        Mod+Shift+F12 repeat=false { screenshot-window; }
        Mod+Print     repeat=false { spawn "sh" "-c" "wl-paste | satty --fullscreen -f - -o $HOME/Pictures/Screenshots/$(date '+%Y%m%d-%H:%M:%S').png"; }
        Mod+F10       repeat=false { spawn "record"; }

    // Window and workspace movement
        // Move focus with Mod + [hjkl]
            Mod+H { focus-column-left; }
            Mod+J { focus-window-or-workspace-down; }
            Mod+K { focus-window-or-workspace-up; }
            Mod+L { focus-column-right; }

            // Move focus left / right with Mod + Mouse Wheel
                Mod+Shift+WheelScrollUp   { focus-column-left; }
                Mod+Shift+WheelScrollDown { focus-column-right; }

            // Focus window / workspace below / above with Mod + Mouse Wheel
                Mod+WheelScrollUp   cooldown-ms=100 { focus-window-or-workspace-up; }
                Mod+WheelScrollDown cooldown-ms=100 { focus-window-or-workspace-down; }

        // Switch to previous / next monitor with Mod + [pn]
            Mod+P { focus-monitor-up; }
            Mod+N { focus-monitor-down; }

        // Switch workspaces with Mod + [1-5]
            Mod+1 { focus-workspace 1; }
            Mod+2 { focus-workspace 2; }
            Mod+3 { focus-workspace 3; }
            Mod+4 { focus-workspace 4; }
            Mod+5 { focus-workspace 5; }

        // Resize focused window / column with Mod + [Shift] + [Minus / Equal]
            Mod+Minus       { set-column-width "-10%"; }
            Mod+Equal       { set-column-width "+10%"; }
            Mod+Shift+Minus { set-window-height "-10%"; }
            Mod+Shift+Equal { set-window-height "+10%"; }
            Mod+R           { switch-preset-column-width; }
            Mod+M           { maximize-column; }
            Mod+Ctrl+R      { reset-window-height; }

        // Move focused window around or between workspaces with Mod + Shift + [hjkl]
            Mod+Shift+H { move-column-left; }
            Mod+Shift+J { move-window-down-or-to-workspace-down; }
            Mod+Shift+K { move-window-up-or-to-workspace-up; }
            Mod+Shift+L { move-column-right; }
    
        // Move focused window to the previous / next monitor with Mod + Shift + [pn]
            Mod+Shift+P { move-window-to-monitor-previous; }
            Mod+Shift+N { move-window-to-monitor-next; }

        // Move focused window to a workspace with Mod + Shift + [1-5]
            Mod+Shift+1 { move-window-to-workspace 1; }
            Mod+Shift+2 { move-window-to-workspace 2; }
            Mod+Shift+3 { move-window-to-workspace 3; }
            Mod+Shift+4 { move-window-to-workspace 4; }
            Mod+Shift+5 { move-window-to-workspace 5; }

    // Column manipulation
        // Consume current window into adjacent column with Mod + []
            Mod+BracketLeft  { consume-or-expel-window-left; }
            Mod+BracketRight { consume-or-expel-window-right; }

        // Consume right-adjacent window into current column with Mod + ,.
            Mod+Comma  { consume-window-into-column; }
            Mod+Period { expel-window-from-column; }

        // Toggle between tabbed and column display
            Mod+SemiColon { toggle-column-tabbed-display; }

    // Media controls
        XF86AudioRaiseVolume       allow-when-locked=true { spawn "wpctl" "set-volume" "-l" "1.0" "@DEFAULT_AUDIO_SINK@" "5%+"; }
        XF86AudioLowerVolume       allow-when-locked=true { spawn "wpctl" "set-volume" "-l" "1.0" "@DEFAULT_AUDIO_SINK@" "5%-"; }
        XF86AudioMute              allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
        Shift+XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "-l" "1.0" "@DEFAULT_AUDIO_SOURCE@" "5%+"; }
        Shift+XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "-l" "1.0" "@DEFAULT_AUDIO_SOURCE@" "5%-"; }
        Shift+XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
        XF86AudioPlay              allow-when-locked=true { spawn "playerctl" "play-pause"; }
        XF86AudioPrev              allow-when-locked=true { spawn "playerctl" "previous"; }
        XF86AudioNext              allow-when-locked=true { spawn "playerctl" "next"; }

    // Brightness controls
        XF86MonBrightnessUp   allow-when-locked=true { spawn "brightnessctl" "set" "+5%"; }
        XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "set" "5%-"; }

    // When all else fails
        Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}

environment {
    GDK_BACKEND "wayland"
    GTK_THEME "catppuccin-mocha-mauve-standard+default:dark"
    QT_QPA_PLATFORM "wayland"
    QT_QPA_PLATFORMTHEME "kvantum"
    QT_STYLE_OVERRIDE "kvantum"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
}

cursor {
    xcursor-theme "Bibata-Modern-Ice"
    xcursor-size 24
    hide-when-typing
    hide-after-inactive-ms 1000
}

clipboard {
    disable-primary
}

hotkey-overlay {
    skip-at-startup
}

/-debug {
    preview-render "screen-capture"
    // preview-render "screencast"
}
